FILE NAME: INDEX.HTML
NAV - + FOR ADDING NEW TASK
NAV - PROJECTS
NAV - TODAY
NAV - ALL

MAIN CONTENT:
DIV - ARRANGE OUTPUT BY PROJECTS
DIV - ARRANGE OUTPUT BY TODAY
DIV - ARRANGE OUTPUT BY SHOWING ALL
DIV - MODAL + INACTIVE

TEMPLATES: TASK MODAL
RENDER : OUTPUT TASK CARD
DIV: CATEGORY
    DIV TASK CARD
        -DIV MAIN TASK
            - DIV LEFT CARD
                - DIV CHECKBOX
                    - SQUARE
                    - CHECK (INNERHTML + I CLASS="" to activate check mark)
                - DIV TASK NAME
            - DIV RIGHT CARD
                - SPAN STARS
            - DIV ST (STRIKETHROUGH for cancelling out what has been done. activate by adding class .st to div)

    <!-- WHEN TASK IS DONE, CHECKED IS HIT THEN CHECK + DIV ST CLASSLIST IS CHANGED FROM INACTIVE TO ACTIVE --!>
    <!-- to add empty stars, use <i class="fi fi-rr-star"></i> -->
    <!-- to add full stars, use <i class="fi fi-sr-star"></i> -->
    <!-- to add checked, use <i class="fi fi-br-check"></i> -->
    <!-- to add strikethrough, use div class st (need to add whole div or remove whole div) -->
    <!-- add subtask and notes as sibling to task and child to task-card -->

RENDER: OUTPUT DONE TASK CARD
    // WE ONLY WANT TO SHOW THE NAME OF THE TASK NO NEED ANY OTHER DETS.
    // WHEN CLICK ON TASK NAME DIV THEN IT EITHER: MODAL THE TASK CARD OR JUST PUSH INTO THE CURRENT DONE TASK CARD.
    
    DIV DONE TASK CARD
        DIV TASK NAME

RENDER: OUTPUT NOTES FOR TASK CARD
    DIV NOTES IN TASK CARD
        LINK : NOTES... <--- WHEN THIS IS CLICK, 
            RENDER DISPLAY NOTES FOR TASK CARD MODAL
            DIV CLOSE INACTIVE X
            DIV NOTES INACTIVE

    <!-- if notes exist, then ADD THIS DIV. IT IS A Link THAT will ? cause notes to pop up or add to the current new task modal div --!>
    // GRAB DATA FROM OBJECT

RENDER: DISPLAY NOTES FOR TASK CARD MODAL
    DIV: NOTES-DISPLAY
        NOTES-DISPLAY-BODY
            NOTES-DISPLAY-HEADER
                ICON: NOTES ICON  
                H3: NOTES
                DIV: NOTES TEXT ---- DISPLAYS THE TEXT THAT IS CURRENTLY SHOWING IN THE OBJECT
                DIV: EDIT <--- WHEN SELECT THIS, YOU CAN EDIT THE TEXT 
        
        NOTES-DISPLAY-FOOTER
            DIV: SUBMIT-CANCEL BTNS
                BUTTON: CANCEL <--- GOES BACK ONE MODAL + CLOSE FN
                BUTTON: SAVE MY EDITS <--- 
                
        // PLEASE GO TO: DEVELOPERDRIVE.COM/ALLOWING-USERS-TO-EDIT-TEXT-CONTENT-WITH-HTML5/
        // DIV: CONTENTEDITABLE = "TRUE"
        PLACE ORIGINAL NOTES CONTENT HERE FROM OBJECT
        FN SAVEEDITS
        FN CHECKEDITS
        PLEASE GO TO WEBSITE AND FOLLOW.

        CANCEL SUBMIT 

RENDER: OUTPUT SUBTASK IN TASK CARD
    //ADD TO DIV TASK CARD AS CHILD, AND AS SIBLING TO DIV MAIN TASK
    DIV SUBTASK CARD IN TASK CARD
        DIV SUBTASK-LINEONE
            DIV LEFT ST CARD
                DIV: CHECKBOX
                    SQUARE <i class="fi fi-rr-square"></i>
                    CHECK + <i class="fi fi-br-check"></i> TO ACTIVATE CHECKED MARK
                DIV: SUBTASK NAME
            DIV RIGHT ST CARD
                SPAN: STARS
            DIV ST *STRIKETHROUGH*
        DIV SUBTASK-LINETWO
            DIV: ST-DESC
        
//     <!-- if subtask exist, then auto populate under the AS SIBLING TO MAIN TASK DIV. 
        + PLEASE ADD MARGIN LEFT TO INDICATE PART OF SAME TASK--!>

RENDER: INPUT TASK MODAL (FORM FOR INPUT OF DATA)
    DIV INPUT TASK MODAL
        FORM
            DIV: CLOSE X
            (1 ROW) H3: NEW TASK
            (1 ROW) DIV: INPUT WRAP
                        INPUT: INPUT-FIELD TEXT REQUIRED/
                        LABEL: TASK NAME
            (1 ROW) DIV: INPUT WRAP
                        INPUT: INPUT-FIELD TEXTAREA
                        LABEL: DESCRIPTION
            (1 ROW) DIV: DUEDATE BTNS ROW
                        DIV: DUE-DATE-INPUT
                            INPUT: INPUT-FIELD DATE
                            +ICON TO OVERLAP EXISTING ICON
                        DIV: BTNS
                            DIV: ADD-NOTES
                            DIV: ADD-SUBTASK
                            DIV: PRIORITY-INPUT
                                SPAN: STARS * * *
            (1 ROW) DIV: PROJ-SUBMIT ROW
                        DIV: PROJECT NAME
                            SELECT: INPUT-FIELD PROJECT
                                OPTION: DEFAULT
                                OPTION: LINK: + NEW <--- INPUT PROJECT MODAL POP UP
                        DIV: SUBMIT-CANCEL BTNS
                            BUTTON: CANCEL
                            BUTTON: SUBMIT <--- WHEN SUBMIT, ALL DATA INCLUDING NOTES AND SUBTASK (FROM TEMPORARY OBJ) WILL BE ADDED TO OBJECT
                                                WHEN SUBMIT, CLEAR DATA INSIDE TEMPORARY OBJECT (FOR NOTES AND SUBTASK)

RENDER: INPUT NOTES MODAL (RENDER WHEN CLICK NOTES BUTTON IN NEW TASK MODAL)
    DIV INPUT NOTES MODAL
        DIV CLOSE X
        DIV NNM BODY
            DIV: NOTES ICON
            H3: NOTES
            TEXTAREA: PLEASE ENTER YOUR NOTES HERE...
        DIV NNM FOOTER
            DIV: SUBMIT-CANCEL BTNS
                BUTTON: CANCEL
                BUTTON: SUBMIT <--- ADD TO TEMPORARY OBJECT TO STORE INFORMATION

RENDER: INPUT MAIN SUBTASK MODAL (RENDER WHEN CLICK SUBTASK BUTTON IN NEW TASK MODAL)
    DIV INPUT MAIN SUBTASK MODAL
        DIV: CLOSE X
        DIV: NSM BODY
            DIV: NSM HEADER
                DIV: SUBTASK ICON
                H3: NOTES
            DIV: SUBTASK GENERATED
            DIV: ADD NEW SUBTASK 
                + <--- BUTTON THAT LINKS TO MODAL FOR ADDING SUBTASK INPUT
        DIV: NSM FOOTER
           DIV: SUBMIT-CANCEL BTNS
                BUTTON: CANCEL
                BUTTON: SUBMIT <--- WHEN ALL SUBTASK FINALIZED HERE, GET ALL DATA FROM SUBTASK GENERATED AND ADD TO TEMPORARY OBJECT 

RENDER: INPUT CHILD SUBTASK MODAL (RENDER WHEN CLICK + BUTTON IN NEW SUBTASK MODAL)
    DIV INPUT CHILD SUBTASK MODAL
        DIV: CLOSE X <--- GOES BACK ONE MODAL + CLOSE FN
        DIV: ICST BODY
            H3: NEW SUB TASK
            DIV: INPUT-WRAP
                INPUT: INPUT-FIELD TEXT REQUIRED/
                LABEL: SUB TASK NAME
            DIV: INPUT-WRAP
                INPUT: INPUT-FIELD TEXTAREA
                LABEL: DESCRIPTION
        DIV: ICST FOOTER
            DIV: SUBMIT-CANCEL BTNS
                BUTTON: CANCEL <--- GOES BACK ONE MODAL + CLOSE FN
                BUTTON: SUBMIT <--- ADD SUBTASK TO MAIN SUBTASK MODAL

RENDER: SUBTASK IN INPUT MAIN SUBTASK MODAL (ADD THIS TO SUBTASK-GENERATED PORTION OF INPUT MAIN SUBTASK MODAL) 
// DISPLAY THE SUBTASKS INPUTTED FROM INPUT SUB SUBTASK MODAL TO THE MAIN SUBTASK PAGE IN SUBTASK GENERATED
    DIV CHILD SUBTASK (INPUT MAIN SUBTASK MODAL)
        DIV: CHILD-SUBTASK-ONE
            DIV: CHILD-LEFT-ONE
                DIV: CHECKBOX
                    SQUARE
                    CHECK
                DIV: SUBTASK NAME
            DIV: CHILD-RIGHT-ONE
                DIV: REMOVE-SUBTASK
                    - <---- WHEN PRESS THIS BUTTON REMOVES THIS SUBTASK FROM THE LIST.
        DIV: CHILD-SUBTASK-TWO
            DIV: ST-DESC

RENDER: INPUT PROJECT MODAL
    DIV PROJECT MODAL
        DIV: CLOSE X <--- GOES BACK ONE MODAL + CLOSE FN
        DIV: PROJECT MODAL BODY
            PROJECT MODAL HEADER
                H2: + 
                H3: ADD NEW PROJECT
            FORM
                DIV: INPUT-WRAP
                    INPUT: INPUT-FIELD TEXT
                    LABEL: NEW PROJ NAME
        DIV: PROJECT MODAL FOOTER           
            DIV: SUBMIT-CANCEL BTNS
                    BUTTON: CANCEL <--- GOES BACK ONE MODAL + CLOSE FN
                    BUTTON: SUBMIT <--- CREATES NEW PROJECT + ADD TO SELECT: PROJECT (CREATE NEW OPTION AND OPTION IS ADDED TO THE SELECTLIST)


-------------------------------------------------------------------------------------------------------------

TEMPORARY FILE -> INSIDE LOCAL STORAGE
FINAL PERMANENT FILE -> INSIDE LOCAL STORAGE


FILE NAME: INPUTTASK.JS
    RENDER: TEMPLATE INPUT TASK MODAL
            UPDATE PROJECTLIST -> SELECT OPTIONS
            EMPTY FINALINPUTOBJECT
            RESET PRIORITYARRAY, SUBTASKARRAY, NOTESARRAY TO EMPTY OR DEFAULT
            CAN I JUST RESET THE WHOLE DOM?
    FINALINPUTOBJECT: {} <--- EXPORT THIS TO TASKSTORAGE.JS
    PRIORITYCHECKED: 
        RENDERSTARS() -- THIS FUNCTION SHOULD ASSIGN THE STARS THE SHADING AND FILL OUT PRIORITY [] (LOOK AT STARSARR IN MODALINPUT.JS)
    SUBTASKCHECKED:
        IF FINALSUBTASKINPUT IS NOT EMPTY THEN ASSIGN
        SUBTASKARRAY AS FINALSUBTASKINPUT;
    NOTESCHECKED:
        IF FINALNOTESINPUT IS NOT EMPTY THEN ASSIGN
        NOTES THE DATA FROM FINALNOTESINPUT
        ELSE LEAVE AS UNDEFINED OR NULL
    INPUTADDED: TRIGGERED WHEN SUBMIT BUTTON HIT
        EV.PREVENTDEFAULT()
        EV.STOPPROPAGATION()
        GATHER DATA FROM .INPUT-FIELD TO GRAB INPUT.ID
        CREATE OBJECT CONTAINING:
        FINALINPUTOBJECT{
            TASKNAME:TASK NAME 
            TASKDESC: DESCRIPTION
            TASKDUEDATE: DUE DATE
            TASKPRIORITY: GRAB FROM PRIORITYCHECKED
            TASKPROJECT: PROJECT
            TASKNOTES: NOTESARRAY
            TASKSUBTASKS: SUBTASKARRAY
        }
    NEWTASKCLOSED: MAINSUBTASKCLOSED: X OR CANCEL -> CLOSE FUNCTION. EMPTY 
        
FILE NAME: INPUTNOTES.JS
    FINALNOTESINPUT: []
    RENDER: TEMPLATE INPUT NOTES MODAL
    NOTESADDED: TRIGGERED WHEN SUBMIT BUTTON HIT.
        EMPTY FINALNOTESINPUT [] 
        GET DATA FROM QS (TEXTAREA)
        THEN FINALNOTESINPUT(DATA) PUSH TO FINALNOTESINPUT
    NOTESCLOSED: X OR CANCEL -> CLOSE FUNCTION. EMPTY FINALNOTESINPUT []

// HERE IS WHERE WE STORE INFORMATION ABOUT SUBTASK AND NOTES TEMPORARILY UNTIL IT IS MOVED TO A PERMANENT OBJECT.

FILE NAME: INPUTSUBTASK.JS
    FINALSUBTASKINPUT: []
    RENDER: TEMPLATE MAIN SUBTASK MODAL
    RENDER: TEMPLATE INPUT CHILD SUBTASK MODAL
    CHILDSUBTASKADDED: TRIGGERED WHEN + BUTTON HIT
        ADD CHILD SUBTASK TO MAIN SUBTASK MODAL
    CHILDSUBTASKREMOVED: TRIGGERED WHEN - BUTTON HIT
        REMOVE CHILD SUBTASK FROM MAIN SUBTASK MODAL
    MAINSUBTASKADDED: TRIGGERED WHEN SUBMIT BUTTON HIT.
        SET MAINSUBTASKADDED AS EMPTY 
        GET DATA FROM CURRENT DIV AND EXTRACT INFORMATION ABOUT TASK NAME AND TASK DESCRIPTION FOR EACH SUBTASK. 
            SUBTASK NAME + NOT DONE CLASSLIST , SUBTASK DESC
                IF SUBTASK DONE, THEN CHECKED + DIV ST
                IF SUBTASK NOTDONE, THEN NO CHECK + NO ST
        CREATE ARRAY TO STORE EACH ONE OF THIS IN. [SUBTASK NAME, SUBTASK DESC] THEN PUSH ALL TO FINALSUBTASKINPUT.
    MAINSUBTASKCLOSED: X OR CANCEL -> CLOSE FUNCTION. EMPTY FINALSUBTASKINPUT []

FILE NAME: PROJECT.JS
    PROJECTLIST: ["DEFAULT"]
    change all project name to uppercase
    RENDER: INPUT PROJECT MODAL
    // JAVASCRIPTTUTORIAL.NET/JAVASCRIPT-DOM/JAVASCRIPT-ADD-REMOVE-OPTIONS/#:~:TEXT=JAVASCRIPT%20USES%20THE%20HTMLSELECTELEMENT%20TYPE,FROM%20THE%20ELEMENT.
    PROJECTADDED:     
    NEWTASKCLOSED: MAINSUBTASKCLOSED: X OR CANCEL -> CLOSE FUNCTION. EMPTY 

FILE NAME: TASKSTORAGE.JS
    ARRAY OF TASKS.
    TASKADDED: EVERYTIME NEW TASK IS CREATED FROM INPUTTASK, ADD THE OBJECT TO ARRAY OF TASKS.
    *SEND TO TASK.JS* THE DATA FROM THIS ARRAY THEN USED TO RENDER THE TASKS ON THE MAIN PAGE.

    DATACOLLECTED: COLLECT DATA FROM LOCAL STORAGE JSON
    DATASAVED: SEND DATA TO BE SAVED IN THE LOCAL STORAGE JSON

    DATEARRANGED:
        SORT DATA BY DATE
        CREATE 2 ARRAY: DONE OR NOT DONE
    PROJECTARRANGED:
        SORT DATA BY PROJECT
        CREATE 2 ARRAY: DONE OR NOT DONE

    DEFAULTARRANGED:
        CREATE 2 ARRAY: DONE OR NOT DONE

FILE NAME: OUTPUTTASK.JS
    NAV INPUT CLICKS:
        DAY <--- EL 
            CALL ARRANGEDBYDATE
            SORT BY DATE
            SORT EACH DAY: DONE OR NOT DONE
        PROJECT <--- EL
            CALL ARRANGEDBYPROJECT
            SORT BY PROJECT NAME
            SORT EACH PROJECT BY DONE OR NOT DONE
        DEFAULT <--- EL //DEFAULT
            CALL ARRANGEDBYDEFAULT
            SORT BY ALL *(JUST ORDER IT WAS ADDED/ACCORDING TO OUR TASK-STORAGE-ARRAY)
            SORT BY DONE OR NOT DONE 

    FOR EACH NOT DONE TASK SORTED:
    RENDER: OUTPUT TASK CARD
        IF NOTES EXIST: 
        RENDER: OUTPUT NOTES FOR TASK CARD
        NOTES-CLICKED: IF CLICKED THEN 
            RENDER: DISPLAY NOTES FOR TASK MODAL
        IF SUBTASKS EXIST:
        RENDER: OUTPUT FOR TASK CARD (ADD TO OUTPUT TASKCARD)
        SUBTASK-DONE:
            RENDER: DIV ST + CHECK MARK BY ADDING CLASSLIST: DONE

    FOR EACH DONE TASK SORTED:
    RENDER: OUTPUT DONE TASK CARD
    



FILE NAME: STYLES.CSS